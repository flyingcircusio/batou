#!{{component.workdir}}/bin/py

"""Check supervisord programs."""

import collections
import subprocess
import re

SUPERVISORCTL = '{{component.workdir}}/bin/supervisorctl'

OK, WARNING, CRITICAL, UKNOWN = 0, 1, 2, 3

states = [OK]

STATEMAP = dict(
    STOPPED='inactive',
    STARTING='active',
    RUNNING='active',
    BACKOFF='undecided',
    STOPPING='inactive',
    EXITED='inactive',
    FATAL='inactive',
)


buckets = collections.defaultdict(list)

try:
    status = subprocess.check_output([SUPERVISORCTL, 'status'])
    status = status.decode('ascii', errors='replace')
except Exception:
    print('CRITICAL: Invalid status from supervisor â€“ is supervisord running?')
    sys.exit(CRITICAL)

for line in status.strip().split('\n'):
    # kludge: append '.' in case a line has too few columns
    program, procstate, _rest = re.split(r'\s+', line + ' .', 2)
    buckets[STATEMAP[procstate]].append(program)

if buckets['inactive']:
    print('CRITICAL: {} programs inactive: {}'.format(
        len(buckets['inactive']), ', '.join(buckets['inactive'])))
    states.append(CRITICAL)

if buckets['undecided']:
    print('WARNING: {} programs undecided: {}'.format(
        len(buckets['undecided']), ', '.join(buckets['undecided'])))
    states.append(WARNING)

if buckets['active']:
    print('OK: {} programs active: {}'.format(
        len(buckets['active']), ', '.join(buckets['active'])))
    states.append(OK)

if not states:
    states.append(UNKNOWN)

sys.exit(max(states))
